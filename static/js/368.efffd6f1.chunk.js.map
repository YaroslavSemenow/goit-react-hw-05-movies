{"version":3,"file":"static/js/368.efffd6f1.chunk.js","mappings":"wMAGe,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,IACC,wBACGA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAM,CAAEP,SAAAA,IAA5C,SACGI,KAFID,EADC,OAWrB,C,sJClBc,SAASK,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,kHAE8BC,EAAAA,EAAAA,MAF9B,gBAEYC,EAFZ,EAEYA,QACFnB,EAASmB,EAAQhB,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,IAE3BO,EAAkBZ,GALtB,gDAOIoB,QAAQC,IAAR,MACAL,GAAS,GARb,yBAUIF,GAAa,GAVjB,6EAHc,sBACdA,GAAa,GADC,mCAiBdQ,EACD,GAAE,KAGD,4BACE,2CAECX,IAAkB,SAAC,IAAD,CAAYX,OAAQW,IAEtCE,IAAa,sCAEbE,IAAS,iFAGf,C","sources":["components/MoviesList/MoviesList.jsx","pages/HomePages/HomePage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: { location } }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nMoviesList.propTypes = PropTypes.arrayOf(\n  PropTypes.objectOf(PropTypes.string.isRequired).isRequired\n).isRequired;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../service/Api-service';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nexport default function HomePage() {\n  const [trendingMovies, setTrendingMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    async function fetchTrendingMovies() {\n      try {\n        const { results } = await getTrendingMovies();\n        const movies = results.map(({ id, title }) => ({ id, title }));\n\n        setTrendingMovies(movies);\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n\n      {trendingMovies && <MoviesList movies={trendingMovies} />}\n\n      {isLoading && <p>Loading...</p>}\n\n      {error && <p>Oops, something went wrong. Please, reload the page</p>}\n    </div>\n  );\n}\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","HomePage","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","getTrendingMovies","results","console","log","fetchTrendingMovies"],"sourceRoot":""}