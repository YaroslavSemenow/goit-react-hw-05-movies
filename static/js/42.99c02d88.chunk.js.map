{"version":3,"file":"static/js/42.99c02d88.chunk.js","mappings":"sQACA,EAA6B,qCAA7B,EAA+E,qCAA/E,EAAgI,oC,SCIjH,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAwCA,OAtCAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,kIAScC,EAAAA,EAAAA,IAAgBV,GAT9B,gBAGMW,EAHN,EAGMA,YACAC,EAJN,EAIMA,MACAC,EALN,EAKMA,aACAC,EANN,EAMMA,aACAC,EAPN,EAOMA,SACAC,EARN,EAQMA,OAGIC,EAXV,0CAWmDN,GACzCO,EAAOL,EAAaM,MAAM,EAAG,GAC7BC,EAAoBC,KAAKC,MAAqB,GAAfR,GAC/BS,EAAmBP,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAE9DrB,GAAa,GACbF,EAAgB,CACda,IAAAA,EACAL,MAAAA,EACAM,KAAAA,EACAE,kBAAAA,EACAL,SAAAA,EACAQ,iBAAAA,IAvBN,kDA0BIK,QAAQC,IAAR,MACArB,GAAS,GA3Bb,yBA6BIF,GAAa,GA7BjB,8EAHc,sBACdA,GAAa,GADC,mCAmCdwB,EACD,GAAE,CAAC9B,KAGF,2BACGG,IACC,iCACE,iBAAK4B,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IAAK9B,EAAac,IAClBiB,IAAK/B,EAAaS,MAClBuB,MAAM,MACNC,OAAO,SAET,4BACE,0BACGjC,EAAaS,MADhB,KACyBT,EAAae,KADtC,QAGA,wCAAgBf,EAAaiB,kBAA7B,QACA,sCACA,uBAAIjB,EAAaY,YACjB,oCACA,uBAAIZ,EAAaoB,0BAGrB,iBAAKQ,UAAWC,EAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMK,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,KAAD,OAGHhC,IAAa,sCACbE,IAAS,iFAGf,C","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card__main\":\"MovieDetailsPage_card__main__GWDJz\",\"card__more\":\"MovieDetailsPage_card__more__KEJyU\",\"card__img\":\"MovieDetailsPage_card__img__cuA3h\"};","import { useEffect, useState } from 'react';\nimport { Link, useParams, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../../service/Api-service';\nimport styles from './MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    async function fetchMovieDetails() {\n      try {\n        const {\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        } = await getMovieDetails(movieId);\n\n        const img = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n        const date = release_date.slice(0, 4);\n        const scoreInPercentage = Math.round(vote_average * 10);\n        const genresNormalized = genres.map(genre => genre.name).join(' ');\n\n        setIsLoading(false);\n        setMovieDetails({\n          img,\n          title,\n          date,\n          scoreInPercentage,\n          overview,\n          genresNormalized,\n        });\n      } catch (error) {\n        console.log(error);\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieDetails && (\n        <>\n          <div className={styles.card__main}>\n            <img\n              className={styles.card__img}\n              src={movieDetails.img}\n              alt={movieDetails.title}\n              width=\"270\"\n              height=\"400\"\n            />\n            <div>\n              <h2>\n                {movieDetails.title} ({movieDetails.date})\n              </h2>\n              <p>User Score: {movieDetails.scoreInPercentage}%</p>\n              <h3>Owerview</h3>\n              <p>{movieDetails.overview}</p>\n              <h3>Genres</h3>\n              <p>{movieDetails.genresNormalized}</p>\n            </div>\n          </div>\n          <div className={styles.card__more}>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops, something went wrong. Please, reload the page</p>}\n    </div>\n  );\n}\n"],"names":["MovieDetailsPage","movieId","useParams","useState","movieDetails","setMovieDetails","isLoading","setIsLoading","error","setError","useEffect","getMovieDetails","poster_path","title","release_date","vote_average","overview","genres","img","date","slice","scoreInPercentage","Math","round","genresNormalized","map","genre","name","join","console","log","fetchMovieDetails","className","styles","src","alt","width","height","to"],"sourceRoot":""}